# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    paths:
      - 'app_python/**'
      - '.github/workflows/python-ci.yml'

jobs:
  build:

    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: "3.9"
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8
      working-directory: app_python
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Testing
      run: |
        pytest
 
  security:
    runs-on: ubuntu-22.04
    timeout-minutes: 5

    steps:
      # Checkout the repository and install dependencies
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'
      - run: pip install -r requirements.txt
        working-directory: app_python

      # Cache Snyk
      - name: Cache Snyk binary
        id: cache-snyk
        uses: actions/cache@v3
        env:
          cache-name: cache-snyk
        with:
          path: app_python/snyk-linux
          key: ${{ runner.os }}-snyk-${{ hashFiles('app_python/snyk-linux') }}
          restore-keys: |
            ${{ runner.os }}-snyk-
            ${{ runner.os }}-

      # Download Snyk
      - name: Download Snyk binary
        if: steps.cache-snyk.outputs.cache-hit != 'true'
        run: |
          curl -LO https://github.com/snyk/cli/releases/download/v1.1278.0/snyk-linux
          chmod +x snyk-linux
        working-directory: app_python

      # Run Snyk
      - name: Run Snyk
        run: ./snyk-linux test --severity-threshold=high
        working-directory: app_python
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  
  docker:
    runs-on: ubuntu-22.04
    timeout-minutes: 5

    needs:
      - security
      - build
    if: ${{ needs.security.result == 'success' && needs.build.result == 'success'}}

    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Set up QEMU
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push the image
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: app_python
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/app_python:latest
